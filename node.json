[{"id":"623cacfe.eb3224","type":"http response","z":"1b7ef9d.7a32e06","name":"","statusCode":"","headers":{},"x":670,"y":420,"wires":[]},{"id":"36f25f6b.a5e9e","type":"http in","z":"1b7ef9d.7a32e06","name":"","url":"/casawatson","method":"post","upload":false,"swaggerDoc":"","x":162.10000610351562,"y":115.00000381469727,"wires":[["530af398.a3700c","2e671c07.6e0274"]]},{"id":"530af398.a3700c","type":"debug","z":"1b7ef9d.7a32e06","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":349.1000061035156,"y":73.00000381469727,"wires":[]},{"id":"2e671c07.6e0274","type":"function","z":"1b7ef9d.7a32e06","name":"Preparar entrada","func":"msg.originalMsg = msg.payload;\nmsg.params = {};\n//msg.type=\"chitchat\";\n// Guardo el userId que pasa Google como identificador de usuario para la gestión de contexto de Node-RED\nmsg.user = msg.originalMsg.user.userId;\n\n// Control de reset de contexto para nuevas sesiones.\nif (msg.originalMsg.conversation.type == 'NEW')\n{\n    msg.payload = '';\n    msg.params.context = {};\n}\nelse\n    msg.payload = msg.originalMsg.inputs[0].arguments[0].textValue\n\n//    msg.params.workspace_id = '84d9839e-8973-4675-bb6a-1620f3d9319e';    \n\nreturn msg;\n\n","outputs":1,"noerr":0,"x":173.10000610351562,"y":222.00000190734863,"wires":[["fbad2e5.0ff1fd"]]},{"id":"ccd5c35f.6a12b","type":"debug","z":"1b7ef9d.7a32e06","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":430,"y":540,"wires":[]},{"id":"1d40056e.c9b3fb","type":"function","z":"1b7ef9d.7a32e06","name":"checkFinal","func":"// Mecanismo para mapear la estructura de cierre de sesión a partir de un parámetro de contexto \n// de Assistant convertido a msg.payload.final en el template anterior.\nif (msg.payload.final && msg.payload.final == 'Yes')\n{\n    finalResponse = {}\n    finalResponse.richResponse = {}\n    finalResponse.richResponse.items = []\n    finalResponse.richResponse.items.push({})\n    finalResponse.richResponse.items[0].simpleResponse = {}\n    finalResponse.richResponse.items[0].simpleResponse.textToSpeech = msg.payload.expectedInputs[0].inputPrompt.richInitialPrompt.items[0].simpleResponse.textToSpeech\n    msg.payload.finalResponse = finalResponse;\n    // Si hay finalResponse, sobran los expectedInputs y no se espera respuesta\n    delete msg.payload.expectedInputs;\n    msg.payload.expectUserResponse = false;\n}\ndelete msg.payload.final\nreturn msg;","outputs":1,"noerr":0,"x":470,"y":420,"wires":[["623cacfe.eb3224","83325bda.c422c8"]]},{"id":"83325bda.c422c8","type":"debug","z":"1b7ef9d.7a32e06","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":650,"y":540,"wires":[]},{"id":"fbad2e5.0ff1fd","type":"watson-conversation-v1","z":"1b7ef9d.7a32e06","name":"assistant chef","workspaceid":"84d9839e-8973-4675-bb6a-1620f3d9319e","multiuser":false,"context":true,"empty-payload":true,"default-endpoint":true,"service-endpoint":"https://gateway.watsonplatform.net/assistant/api","timeout":"","optout-learning":false,"x":460,"y":120,"wires":[["ac394f3f.c0dd7"]]},{"id":"ac394f3f.c0dd7","type":"function","z":"1b7ef9d.7a32e06","name":"Filter SSML","func":"msg.payload.output.text[0] = msg.payload.output.text[0].replace(/(<([^>]+)>)/ig,\"\")\nreturn msg;","outputs":1,"noerr":0,"x":130,"y":420,"wires":[["3d68021.d35a0fe","f40e8af9.407a1"]]},{"id":"3d68021.d35a0fe","type":"debug","z":"1b7ef9d.7a32e06","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":210,"y":540,"wires":[]},{"id":"f40e8af9.407a1","type":"template","z":"1b7ef9d.7a32e06","name":"","field":"payload","fieldType":"msg","format":"json","syntax":"mustache","template":"{\n    \"conversationToken\": \"{{payload.context.conversation_id}}\",\n    \"expectUserResponse\": true,\n    \"expectedInputs\": [\n        {\n            \"inputPrompt\": {\n                \"richInitialPrompt\": {\n                    \"items\": [\n                        {\n                            \"simpleResponse\": {\n                                \"textToSpeech\": \"{{payload.output.text}}\",\n                                \"displayText\": \"{{payload.output.text}}\"\n                            }\n                        }\n                    ],\n                    \"suggestions\": []\n                }\n            },\n            \"possibleIntents\": [\n                {\n                    \"intent\": \"actions.intent.TEXT\"\n                }\n            ]\n        }\n    ],\n    \"final\" : \"{{payload.context.vgwHangUp}}\"\n}","output":"json","x":300,"y":380,"wires":[["1d40056e.c9b3fb"]]}]
